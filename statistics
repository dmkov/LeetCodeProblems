Solved:

May 2019:
26 - 53, 26, 122
27 - 443, 204
28 - 350, 11, 345
29 - 374
30 - 100
31 - 572

June 2019:
3 - 844
4 - 496, 232, 35
5 - 14
11 - 530
12 - 437, 530
15 - 976
16 - 441
17 - 171, 883
18 - 263, 235, 155

July 2019
1 - 112

Done with help:
204 - did not pass timeout (non efficient solution with hashmap)
11 - did not find the best solution (n^2 instead of n)
496 - did not think about hashmap initially to speed up the iteration
232 - did not consider option to move items only when the second stack is empty to amortize pop()/peak() methods
530 - did not consider better option with O(n) complexity. Implemented nlog(n) instead.
437 - did not consider option with hashmap and O(n) complexity. Implemented n^2 instead
976 - missed idea of that the sum of two other lengths should be greater than the largest length in the triangle
441 - did not know formula for arithmetic progression
155 - did not consider option to create class to keep both value and minimum numbers

Done by myself but need attention:
122 - did mistake in calculations
374 - while condition should be inclusive - while (min <= max) - in case of array with one element
100 - recursion check is more simple and efficient than migration to the array
35 - did not notice that with right shift result should be additionally incremented
922 - did not think about iterating only even indexes (i+2)
